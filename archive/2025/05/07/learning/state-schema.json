{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Session State Object",
    "version": "2.0.0",
    "description": "Schema defining the structure for persisting and resuming collaborative AI session state.",
    "type": "object",
    "properties": {
      "schema_info": {
        "type": "object",
        "description": "Meta-information about the schema instance itself.",
        "properties": {
          "schema_version": {
            "type": "string",
            "pattern": "^\\d+\\.\\d+\\.\\d+$",
            "description": "Version of this Session State Object schema (e.g., 2.0.0)."
          },
          "timestamp_created": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp of when this session state object was created/saved."
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the session."
          }
        },
        "required": ["schema_version", "timestamp_created", "session_id"]
      },
      "project_context": {
        "type": "object",
        "description": "High-level context about the project being worked on, including its purpose, goals, scope, and key characteristics.",
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the project."
          },
          "project_title": {
            "type": "string",
            "description": "Concise, human-readable title for the project."
          },
          "project_problem_statement": {
              "type": "string",
              "description": "Articulation of the problem the project aims to solve or the opportunity it addresses."
          },
          "project_vision_statement": {
            "type": "string",
            "description": "Aspirational statement describing the desired future state or ultimate impact of the project."
          },
          "target_audience_beneficiaries": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Description of who the project is ultimately for or who will benefit most."
          },
          "strategic_objectives": {
            "type": "array",
            "description": "Specific, measurable objectives contributing to the project vision.",
            "items": {
              "type": "object",
              "properties": {
                "objective_id": { "type": "string", "format": "uuid", "description": "Unique ID for the objective." },
                "description": { "type": "string" },
                "status": { "type": "string", "enum": ["proposed", "active", "achieved", "on_hold", "cancelled"] },
                "target_metrics_summary": { "type": "string", "description": "Brief summary of how success for this objective is measured.", "optional": true },
                "stakeholder_relevance": {"type": "array", "items": {"type": "string"}, "description": "Stakeholder groups particularly relevant to this objective.", "optional": true }
              },
              "required": ["objective_id", "description", "status"]
            }
          },
          "scope_definition": {
            "type": "object",
            "description": "Defines the boundaries of the project.",
            "properties": {
              "in_scope_summary": { "type": "string", "description": "Textual summary of what is included in the project." },
              "out_of_scope_summary": { "type": "string", "description": "Textual summary of what is explicitly excluded from the project." },
              "key_deliverables_summary": { "type": "string", "description": "High-level summary of major project outputs/deliverables." }
            },
            "required": ["in_scope_summary", "out_of_scope_summary", "key_deliverables_summary"]
          },
          "critical_success_factors": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Factors absolutely essential for achieving the project vision and objectives."
          },
          "known_constraints_and_dependencies": {
            "type": "object",
            "description": "Captures limitations and interconnections relevant to the project.",
            "properties": {
              "constraints": { "type": "array", "items": { "type": "string" }, "description": "e.g., Budget, timeline, resources." },
              "dependencies": { "type": "array", "items": { "type": "string" }, "description": "Key internal or external project dependencies." }
            }
          },
          "project_status": {
            "type": "string",
            "enum": ["ideation", "planning", "active_development", "pilot", "launched", "maintenance", "on_hold", "archived", "cancelled"],
            "description": "Overall status of the project."
          },
          "source_document_references": {
              "type": "array",
              "items": {"type": "string"},
              "description": "References to key source documents or inspirations (e.g., URLs, file paths, system names)."
          },
          "ethical_considerations_summary": {
              "type": "string",
              "description": "Brief summary of explicit ethical considerations for this project.",
              "optional": true
          }
        },
        "required": [
          "project_id",
          "project_title",
          "project_problem_statement",
          "project_vision_statement",
          "strategic_objectives",
          "scope_definition",
          "project_status"
        ]
      },
      "methodology_context": {
        "type": "object",
        "description": "Defines the agreed-upon methods, AI personas, interaction styles, and communication protocols for the session.",
        "properties": {
          "active_ai_persona_profile": {
            "type": "object",
            "description": "Defines the primary AI persona for the current session.",
            "properties": {
              "persona_id": { "type": "string", "description": "Unique identifier for the persona (e.g., data_analyst_v1)." },
              "persona_name": { "type": "string", "description": "Human-readable name for the persona." },
              "persona_role_description": { "type": "string", "description": "Brief description of the persona's role and responsibilities." },
              "core_capabilities_summary": {
                "type": "array",
                "items": { "type": "string" },
                "description": "List of key skills or functions this persona exhibits."
              },
              "persona_limitations_summary": {
                "type": "string",
                "description": "Brief statement of what this persona is not designed to do or its limitations.",
                "optional": true
              }
            },
            "required": ["persona_id", "persona_name", "persona_role_description", "core_capabilities_summary"]
          },
          "interaction_style_preference": {
            "type": "object",
            "description": "Defines the preferred mode of interaction for the session.",
            "properties": {
              "style_id": { "type": "string", "description": "Identifier for the interaction style (e.g., socratic_dialogue)." },
              "style_description": { "type": "string", "description": "Brief explanation of this interaction style." }
            },
            "required": ["style_id", "style_description"]
          },
          "communication_tone_preference": {
            "type": "string",
            "enum": ["formal_technical", "informal_collaborative", "direct_and_concise", "exploratory_and_reflective", "custom"],
            "description": "Preferred communication tone for the AI."
          },
          "cognitive_support_tools_enabled": {
            "type": "array",
            "items": { "type": "string" },
            "description": "List of specific cognitive support features or tools active or preferred.",
            "optional": true
          },
          "session_ground_rules_or_protocols": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Explicitly agreed-upon rules for the interaction.",
            "optional": true
          },
          "available_expert_persona_roster": {
            "type": "array",
            "description": "Other expert AI personas available for consultation.",
            "items": {
              "type": "object",
              "properties": {
                "persona_id": { "type": "string" },
                "persona_name": { "type": "string" },
                "brief_expertise_description": { "type": "string" }
              },
              "required": ["persona_id", "persona_name", "brief_expertise_description"]
            },
            "optional": true
          },
          "key_epistemological_commitments_ref": {
            "type": "string",
            "description": "Reference to overarching epistemological or ethical guidelines for the AI.",
            "optional": true
          },
          "preferred_language_and_terminology": {
            "type": "object",
            "properties": {
              "language_code": { "type": "string", "default": "en-US", "description": "e.g., en-US, en-GB." },
              "domain_specific_glossary_ref": { "type": "string", "description": "Reference to user-provided domain-specific glossary.", "optional": true }
            },
            "optional": true
          }
        },
        "required": [
          "active_ai_persona_profile",
          "interaction_style_preference",
          "communication_tone_preference"
        ]
      },
      "artifact_manifest": {
        "type": "array",
        "description": "A list of key artifacts, documents, or data schemas relevant to or produced by the session.",
        "items": {
          "type": "object",
          "description": "Represents a single artifact, document, or data schema relevant to the session.",
          "properties": {
            "artifact_id": {
              "type": "string",
              "format": "uuid",
              "description": "Unique identifier for this artifact within the project ecosystem."
            },
            "artifact_name": {
              "type": "string",
              "description": "Human-readable name or title of the artifact (e.g., 'Serverless Configuration v1.2', 'User Persona Definitions')."
            },
            "artifact_type": {
              "type": "string",
              "enum": [
                "document_text",
                "document_markdown",
                "schema_json",
                "schema_yaml",
                "dataset_csv",
                "dataset_json",
                "code_snippet",
                "image_diagram",
                "executable_script",
                "configuration_file",
                "session_summary",
                "external_link",
                "other"
              ],
              "description": "Categorization of the artifact type."
            },
            "artifact_version": {
              "type": "string",
              "pattern": "^\\d+\\.\\d+\\.\\d+$",
              "description": "Version number of the artifact (e.g., 1.0.0)."
            },
            "status": {
              "type": "string",
              "enum": ["draft", "review", "final", "approved", "deprecated", "archived", "external"],
              "description": "Current status of the artifact."
            },
            "description_summary": {
              "type": "string",
              "description": "A brief summary of the artifact's content or purpose.",
              "optional": true
            },
            "location_reference": {
              "type": "object",
              "description": "Reference to the artifact's location or content.",
              "properties": {
                "type": { "type": "string", "enum": ["url", "file_path", "internal_id", "inline_content_ref"], "description": "Type of location reference."},
                "identifier": { "type": "string", "description": "The actual URL, path, ID, or reference key."}
              },
              "required": ["type", "identifier"],
              "optional": true
            },
            "created_timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp of when this artifact entry was first created or logged."
            },
            "last_modified_timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp of when this artifact entry was last modified."
            },
            "tags_keywords": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Keywords or tags for easier searching and categorization.",
              "optional": true
            },
            "related_artifact_ids": {
              "type": "array",
              "items": { "type": "string", "format": "uuid" },
              "description": "List of artifact_ids that this artifact is related to.",
              "optional": true
            },
            "owner_contributor_ref": {
                "type": "string",
                "description": "Reference to the primary owner or key contributor (e.g., user ID, AI persona ID).",
                "optional": true
            }
          },
          "required": [
            "artifact_id",
            "artifact_name",
            "artifact_type",
            "artifact_version",
            "status",
            "created_timestamp",
            "last_modified_timestamp"
          ]
        },
        "optional": true
      },
      "session_history_summary": {
        "type": "object",
        "description": "A summary of recent interactions, key decisions, learnings, and the overall narrative progression within the current active session.",
        "properties": {
          "session_narrative_summary": {
            "type": "string",
            "description": "A brief prose summary capturing the overall arc or theme of the current session.",
            "optional": true
          },
          "last_n_interactions_log": {
            "type": "array",
            "description": "A brief, rolling log of the last few significant interactions (e.g., 3-5 turns).",
            "items": {
              "type": "object",
              "properties": {
                "interaction_id": { "type": "string", "format": "uuid", "description": "Unique ID for the interaction/turn." },
                "actor": { "type": "string", "description": "Who performed the action (e.g., 'user', 'ai_persona_id')." },
                "summary_of_action_or_query": { "type": "string", "description": "Brief summary of what was said or done." },
                "key_information_exchanged_summary": { "type": "string", "description": "Brief summary of critical data points shared/generated.", "optional": true },
                "ai_confidence_level_if_applicable": {"type": "number", "minimum": 0, "maximum": 1, "optional": true},
                "user_sentiment_indication_if_applicable": {"type": "string", "optional": true},
                "timestamp": { "type": "string", "format": "date-time", "description": "ISO 8601 timestamp of the interaction." }
              },
              "required": ["interaction_id", "actor", "summary_of_action_or_query", "timestamp"]
            },
            "optional": true
          },
          "key_decisions_made_this_session": {
            "type": "array",
            "description": "Significant decisions taken during the current active session.",
            "items": {
              "type": "object",
              "properties": {
                  "decision_summary": {"type": "string"},
                  "rationale_summary": {"type": "string", "optional": true},
                  "timestamp": { "type": "string", "format": "date-time" }
              },
              "required": ["decision_summary", "timestamp"]
            },
            "optional": true
          },
          "key_learnings_or_insights_this_session": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Important discoveries or insights gained during the current active session.",
            "optional": true
          },
          "agreements_or_alignments_reached_this_session": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Points where explicit agreement or alignment was achieved between user and AI.",
              "optional": true
          },
          "current_working_hypotheses_or_theories": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Active hypotheses or theories being explored in the session.",
            "optional": true
          },
          "unresolved_questions_or_issues_this_session": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Open items or questions that need to be addressed from the current session.",
            "optional": true
          },
          "last_significant_checkpoint_summary": {
            "type": "string",
            "description": "Textual summary of the state at the last major checkpoint or completed phase within this session.",
            "optional": true
          }
        }
      },
      "current_focus": {
        "type": "object",
        "description": "Defines the immediate task, question, or objective for the next interaction or step in the session.",
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "description": "A unique identifier for this specific task or focus item."
          },
          "task_description_brief": {
            "type": "string",
            "description": "A concise, actionable description or direct question for the immediate task."
          },
          "task_type": {
            "type": "string",
            "enum": [
              "information_request",
              "data_analysis_request",
              "content_generation_request",
              "code_generation_request",
              "problem_solving_step",
              "decision_making_point",
              "artifact_creation_or_update",
              "methodology_adjustment",
              "clarification_needed",
              "user_instruction",
              "system_recommendation",
              "other"
            ],
            "description": "Categorization of the type of task or focus."
          },
          "intended_ai_persona_for_task": {
            "type": "string",
            "description": "The persona_id of the AI persona intended to handle this task."
          },
          "specific_input_requirements_summary": {
              "type": "string",
              "description": "Brief of specific data/information immediately necessary to begin this task.",
              "optional": true
          },
          "expected_outcome_summary": {
            "type": "string",
            "description": "A brief summary of what a successful completion of this task looks like.",
            "optional": true
          },
          "success_criteria_summary": {
              "type": "string",
              "description": "Short statement on criteria for judging successful task completion.",
              "optional": true
          },
          "related_project_objective_id": {
            "type": "string",
            "format": "uuid",
            "description": "Optional: The project_objective_id this task primarily supports.",
            "optional": true
          },
          "related_artifact_ids": {
            "type": "array",
            "items": { "type": "string", "format": "uuid" },
            "description": "Optional: List of artifact_ids primary to this task.",
            "optional": true
          },
          "task_priority": {
            "type": "integer",
            "enum": [1, 2, 3, 4, 5],
            "description": "Priority level (e.g., 1=Critical, 5=Low).",
            "optional": true
          },
          "originator": {
              "type": "string",
              "enum": ["user_defined", "ai_suggested", "system_generated"],
              "description": "Indicates who or what initiated this focus/task."
          }
        },
        "required": [
          "task_id",
          "task_description_brief",
          "task_type",
          "intended_ai_persona_for_task",
          "originator"
        ]
      },
      "user_preferences": {
        "type": "object",
        "description": "User-specific preferences that can influence AI behavior or output formatting across sessions. (Designed for future growth).",
        "properties": {
          "preferred_output_formats": {
            "type": "object",
            "description": "Default format preferences for different types of AI output.",
            "properties": {
              "code_snippets": { "type": "string", "description": "e.g., 'markdown_fenced', 'direct_code_block'" },
              "data_tables": { "type": "string", "description": "e.g., 'markdown_pipe_table', 'csv_inline'" },
              "diagrams_textual": { "type": "string", "description": "e.g., 'mermaid_js', 'plant_uml'" }
            },
            "optional": true
          },
          "notification_preferences": {
            "type": "object",
            "description": "Preferences for how the user wants to be notified of certain events.",
            "properties": {
                "long_task_completion": {"type": "boolean", "default": false}
            },
            "optional": true
          },
          "accessibility_preferences": {
              "type": "object",
              "description": "Settings to improve accessibility.",
              "properties": {
                  "font_size_adjustment_factor": {"type": "number", "minimum": 0.5, "maximum": 2.0, "optional": true},
                  "high_contrast_mode_enabled": {"type": "boolean", "default": false, "optional": true}
              },
              "optional": true
          }
        },
        "additionalProperties": true,
        "optional": true
      },
      "custom_extensions": {
        "type": "object",
        "description": "A flexible space for tool-specific or project-specific extensions to the session state. Allows for structured custom data without altering the core schema.",
        "additionalProperties": true,
        "properties": {
          "extension_metadata": {
              "type": "array",
              "items": {
                  "type": "object",
                  "properties": {
                      "extension_id": {"type": "string"},
                      "description": {"type": "string"},
                      "version": {"type": "string", "pattern": "^\\d+\\.\\d+\\.\\d+$"}
                  },
                  "required": ["extension_id", "description"]
              },
              "description": "Optional metadata about the extensions being used.",
              "optional": true
          }
        },
        "optional": true
      }
    },
    "required": [
      "schema_info",
      "project_context",
      "methodology_context",
      "session_history_summary",
      "current_focus"
    ]
  }