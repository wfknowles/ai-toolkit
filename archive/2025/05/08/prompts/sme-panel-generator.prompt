# SME Panel of Persona Request

I wanting to assemble a new panel of experts to help analyze:

I've built a generator to create persona, but Im wanting to create a generator to take existing persona and create a new grouping of them that can serve as an expert panel for a given topic or domain. 



Please review the prompt and also think about what could be done more elegantly?
Please assess this goal and then suggest 5 expert persona to help guide that conversation/research? 

Once you complete the persona, lets use the persona examplar (/Users/wknowles/Develop/ai/myAi/trevipay/exemplars/persona.exemplar.md) to validate the definitions. After that, lets use the examplar examplar (/Users/wknowles/Develop/ai/myAi/trevipay/exemplars/exemplar.exemplar.md) to validate the newly created examplars.

This is really good! Here are some other things to consider:

- I'm actually in the middle of a refactor where Im wanting to structure all of the prompts to use json inputs and outputs, interface contracts, and schema templates. I'm also working to modularize my prompts and adhere to a separation of concerns to make the work as maintainable and conforming to regular software engineering conventions as possible. I have future plans to use a prompt templating strategy to define the component parts of a prompt and then creating meta-prompts that could be configured in different ways to make new functionalities possible. I also think I can take this idea to create a prompt template parser that can analyze a template and then chunk it in a way that aids the the ai model execute a given prompt template with more precision, repeatably, and efficiency. Please lend me your wisdom!

- As part of that work, my ultimate plan for the persona files is to have defined required json outputs. I'm wanting to use json as main means of passing data between different prompts and for helping inform and manage intra prompt context. I'm really wanting to do this elegantly, so I'd love some guidance on best practices, insights, or suggestions for envisioning or handling aspects in a more "enterprise-grade, fin-techie way."

- You mention that I'm likely using typescript somewhere and that I should remove it if Im not actually using the imports. I was at a more proof-of-concept stage with that. The real goal was to leverage typescript in a way that I could build the interfaces and new functionalities in a clever and empowering way, all while delivering it's dev UX to the prompt engineering world. In that same vein, I bet there's a clever way to use a testing or linting model to really drive a higher quality of ai-human work product and unparalleled UX. Teach me about the best practices for implement this concept. Educate me on the unknown unknowns within the the world of this ask. Please show me concrete examples.

I would actually like to update the persona files to include required json outputs that are based on this schema: . I'm not sure what it would look like?